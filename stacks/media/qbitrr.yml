
services:
  qbitrr:
    container_name: qbitrr
    image: feramance/qbitrr:latest
    tty: true # Ensure the output of docker-compose logs qBitrr are properly colored.
    restart: ${RESTART_POLICY}
    network_mode: bridge
    # networks: This container MUST share a network with your Sonarr/Radarr instances
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - ${APP_CONFIG_PATH}/qbitrr:/config:rw  # Config folder for qBitrr
      - ${MEDIA_PATH}/torrents/complete:${DATA_PATH}/torrents/complete:rw # The script will ALWAYS require write permission in this folder if mounted, this folder is used to monitor completed downloads and if not present will cause the script to ignore downloaded file monitoring.
      # Now just to make sure it is clean, when using this script in a docker you will need to ensure you config.toml values reflect the mounted folders.
      # The same would apply to Settings.CompletedDownloadFolder
      # e.g CompletedDownloadFolder = /completed_downloads/folder/in/container

    logging: # this script will generate a LOT of logs - so it is up to you to decide how much of it you want to store
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: 3
    #depends_on: # Not needed but this ensures qBitrr only starts if the dependencies are up and running
    #  - qbittorrent
    #  - radarr-1080p
    #  - radarr-4k
    #  - sonarr-1080p
    #  - sonarr-anime
    #  - overseerr
    #  - ombi

# Environment file for Portainer
env_file: ../../stack.env
